/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.31
 * Generated at: 2025-04-17 18:48:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("    <!-- ===== CSS ===== -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/css/login.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- ===== BOX ICONS ===== -->\r\n");
      out.write("    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.0.5/css/boxicons.min.css' rel='stylesheet'>\r\n");
      out.write("\r\n");
      out.write("    <title>Login - VitaminFruit</title>\r\n");
      out.write("    ");

        String message = request.getParameter("message");
        if (message != null) {
    
      out.write("\r\n");
      out.write("    <p style=\"color: red; text-align: center; font-weight: bold; margin-bottom: 10px;\">\r\n");
      out.write("        ");
      out.print( message );
      out.write("\r\n");
      out.write("    </p>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"l-form\">\r\n");
      out.write("    <div class=\"shape1\"></div>\r\n");
      out.write("    <div class=\"shape2\"></div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"form\">\r\n");
      out.write("        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/img/authentication.svg\" alt=\"Background 1\">\r\n");
      out.write("\r\n");
      out.write("        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login\" method=\"POST\" class=\"form__content\">\r\n");
      out.write("            <h1 class=\"form__title\">VitaminFruit</h1>\r\n");
      out.write("            <div class=\"form__div form__div-one\">\r\n");
      out.write("                <div class=\"form__icon\">\r\n");
      out.write("                    <i class='bx bx-user-circle'></i>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form__div-input\">\r\n");
      out.write("                    <label for=\"\" class=\"form__label\">Email</label>\r\n");
      out.write("                    <!-- Giữ lại email nếu đăng nhập sai -->\r\n");
      out.write("                    <input type=\"text\" id=\"useremail\" name=\"useremail\" class=\"form__input\"\r\n");
      out.write("                           value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.useremail != null ? param.useremail : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form__div\">\r\n");
      out.write("                <div class=\"form__icon\">\r\n");
      out.write("                    <i class='bx bx-lock' ></i>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"form__div-input\">\r\n");
      out.write("                    <label for=\"\" class=\"form__label\">Mật khẩu</label>\r\n");
      out.write("                    <!-- Mật khẩu không được giữ lại khi đăng nhập sai -->\r\n");
      out.write("                    <input type=\"password\" id=\"pass\" name=\"pass\" class=\"form__input\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Thông báo lỗi đăng nhập -->\r\n");
      out.write("            <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty errorMessage}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                <p style=\"color: red; text-align: center;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("            </c:if>\r\n");
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/forgotPassword.jsp\" class=\"form__forgot\">Quên mật khẩu ?</a>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" class=\"form__button\" value=\"Đăng nhập\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"register\">\r\n");
      out.write("                <p>Chưa có tài khoản?</p>\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/register.jsp\">Đăng Kí</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"hidden\" id=\"googleToken\" name=\"googleToken\" value=\"\">\r\n");
      out.write("            <input type=\"hidden\" id=\"facebookToken\" name=\"facebookToken\" value=\"\">\r\n");
      out.write("            <div class=\"form__social\">\r\n");
      out.write("                <span class=\"form__social-text\">Đăng nhập bằng</span>\r\n");
      out.write("\r\n");
      out.write("                <a href=\"#\" class=\"form__social-icon\" onclick=\"signInWithFacebook();\"><i class='bx bxl-facebook' ></i></a>\r\n");
      out.write("                <a href=\"https://accounts.google.com/o/oauth2/auth?scope=email profile openid\r\n");
      out.write("\r\n");
      out.write("&redirect_uri=http://localhost:9090/project_fruit/google-login\r\n");
      out.write("\r\n");
      out.write("&response_type=code\r\n");
      out.write("\r\n");
      out.write("&client_id=1033832143997-6e97eqtcre3a5em76s2fo28rld9dpf8v.apps.googleusercontent.com\r\n");
      out.write("\r\n");
      out.write("&approval_prompt=force\" class=\"form__social-icon\" onclick=\"signInWithGoogle();\"><i class='bx bxl-google' ></i></a>\r\n");
      out.write("                <a href=\"#\" class=\"form__social-icon\"><i class='bx bxl-instagram' ></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ===== MAIN JS ===== -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/assets/js/formlogin.js\"></script>\r\n");
      out.write("<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n");
      out.write("<script src=\"https://connect.facebook.net/en_US/sdk.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    // Google Sign-In\r\n");
      out.write("    function signInWithGoogle() {\r\n");
      out.write("        gapi.load('auth2', function() {\r\n");
      out.write("            gapi.auth2.init({\r\n");
      out.write("                client_id: 'YOUR_GOOGLE_CLIENT_ID' // Thay thế bằng Client ID của bạn\r\n");
      out.write("            }).then(function() {\r\n");
      out.write("                gapi.auth2.getAuthInstance().signIn().then(function(googleUser) {\r\n");
      out.write("                    var idToken = googleUser.getAuthResponse().id_token;\r\n");
      out.write("                    document.getElementById('googleToken').value = idToken;\r\n");
      out.write("                    document.querySelector('form').submit();\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Facebook Login\r\n");
      out.write("    window.fbAsyncInit = function() {\r\n");
      out.write("        FB.init({\r\n");
      out.write("            appId: 'YOUR_FACEBOOK_APP_ID', // Thay thế bằng App ID của bạn\r\n");
      out.write("            cookie: true,\r\n");
      out.write("            xfbml: true,\r\n");
      out.write("            version: 'v19.0'\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        FB.AppEvents.logPageView();\r\n");
      out.write("\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    function signInWithFacebook() {\r\n");
      out.write("        FB.login(function(response) {\r\n");
      out.write("            if (response.authResponse) {\r\n");
      out.write("                var accessToken = response.authResponse.accessToken;\r\n");
      out.write("                document.getElementById('facebookToken').value = accessToken;\r\n");
      out.write("                document.querySelector('form').submit();\r\n");
      out.write("            } else {\r\n");
      out.write("                console.log('User cancelled login or did not fully authorize.');\r\n");
      out.write("            }\r\n");
      out.write("        }, {scope: 'email'});\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
