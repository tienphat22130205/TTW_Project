/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.hidetake.ssh" version "2.11.2"
    id 'war'
}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
        mavenCentral()
}

dependencies {
    api 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.1'
    api 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    api 'mysql:mysql-connector-java:8.0.33'
    api 'org.jdbi:jdbi3-core:3.47.0'
    api 'org.mindrot:jbcrypt:0.4'
    api 'com.google.api-client:google-api-client:1.32.1'
    api 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    api 'com.google.api-client:google-api-client-gson:1.32.1'
    api 'org.json:json:20210307'
    api 'com.google.code.gson:gson:2.10.1'
    api 'org.apache.httpcomponents:fluent-hc:4.5.14'
    api 'org.apache.httpcomponents:httpclient:4.5.13'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
}

group = 'vn.edu.hcmuaf.fit'
version = '1.0-SNAPSHOT'
description = 'project_fruit'
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
remotes {
    host {
        host = '192.168.40.131'
        user = 'root'
        password = 'tphat'
    }
}
ssh.settings {
    knownHosts = allowAnyHosts
}
task docker_app_start {
    doLast {
        println 'begin docker_app_start'
        ssh.run {
            session(remotes.host) {
                execute 'docker stop tomcat', ignoreError: true
                execute 'docker run -it --rm -d ' +
                        '--name tomcat ' +
                        '-v /usr/deploy:/usr/local/tomcat/webapps ' +
                        '-p 80:8080 ' +
                        'tomcat:latest&'
            }
        }
    }
}
task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                remove '/usr/deploy/project_fruit.war'
                remove '/usr/deploy/project_fruit/'
                remove '/usr/deploy/project_fruit-1/'
                put from: "${project.projectDir}/build/libs/project_fruit-1.0-SNAPSHOT.war",
                        into: "/usr/deploy/project_fruit.war"
            }
        }
    }
}

task docker_deploy {
    docker_deploy.dependsOn docker_app_start
    docker_deploy.dependsOn docker_upload_file_to_server
    docker_deploy.dependsOn build
    tasks.getByName('docker_app_start').mustRunAfter docker_upload_file_to_server
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
